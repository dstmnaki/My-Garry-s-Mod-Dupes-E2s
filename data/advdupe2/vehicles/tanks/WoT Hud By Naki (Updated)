@name WoT Hud By Naki
@inputs AP HE Gold Slot4 Slot5 Slot6 HP MaxHP
@inputs [Seat Base Gun Turret]:entity EGP:wirelink Active FOV GunReady KMH
@persist I3 Count Count2 Ready
@persist W H TankInfoPanelW TankInfoPanelH
@persist AP HE Gold
@persist Slot4 Slot5 Slot6
@persist SpreadAddSpeed SpreadNegateSpeed SpreadBaseVal SpreadMaxVal SpreadAddSpeedTreshold ZoomX:string Zoom Progress Progress2
@persist Version:string
@outputs ZoomX:string
@trigger none
if(dupefinished()){reset()}
if(first()){
    #[ -- ] Settings [ -- ]#
    
    TankName="Pz.IV F2"
    
    SpreadBaseVal=16
    SpreadMaxVal=150
    
    SpreadAddSpeed=1
    SpreadNegateSpeed=2
    
    SpreadAddSpeedTreshold=0
    
    HPOffset=0
    
    
    #[ -- ] Settings ends here [ -- ]#
    
    EGP:egpClear()
    Ent=Seat:driver():isPlayer() ? Seat:driver() : owner()
    W=egpScrW(Ent)
    H=egpScrH(Ent)
    
    TankInfoPanelW=-845
    TankInfoPanelH=425
    
    setName("WoT EGP Hud "+"["+owner():name()+"]")
    Version="V1.1"
    
    local I = 4
    EGP:egpBox(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH+H/2),vec2(230))
    EGP:egpColor(I,vec(38, 37, 34)*0.9)
    
    local I = 5
    EGP:egpBoxOutline(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH+H/2),vec2(230))
    EGP:egpColor(I,vec(38, 37, 34)*0.35)
    EGP:egpSize(I,2.5)
    
    local I = 6
    EGP:egpBoxOutline(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH-85+H/2),vec2(222,16))
    EGP:egpColor(I,vec(156, 156, 156)*0.6)
    EGP:egpSize(I,2)
    
    rangerPersist(1)
    rangerFilter(Base:getConstraints())
    rangerFilter(Base:children())
    rangerFilter(array(Base,Gun))
    
    holoCreate(1)
    holoAlpha(1,0)
    
    EGP:egpBox(1,vec2(),vec2())
    EGP:egpCircleOutline(2,vec2(),vec2())
    EGP:egpParent(2,1)
    EGP:egpColor(2,vec(215))
    EGP:egp3DTracker(1,vec())
    EGP:egpParent(1,holoEntity(1))  
    
    local I = 62
    EGP:egpCircleOutline(I,vec2(),vec2(4))
    EGP:egpColor(I,vec(100,255,100))
    EGP:egpParent(62,1)
    
    local I = 3
    EGP:egpBox(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH+12+H/2),vec2(15))
    
    local I = 7
    EGP:egpText(I,Seat:driver():isPlayer() ? Seat:driver():name() : owner():name(),vec2(TankInfoPanelW-111+W/2,TankInfoPanelH-111+H/2))
    EGP:egpColor(I,vec(156, 156, 156)*0.9)
    EGP:egpFont(I,"Consolas")
    EGP:egpSize(I,15)
    
    local I = 8
    EGP:egpText(I,TankName,vec2(TankInfoPanelW+110+W/2,TankInfoPanelH-111+H/2))
    EGP:egpColor(I,vec(156, 156, 156)*0.9)
    EGP:egpFont(I,"Consolas")
    EGP:egpSize(I,15)
    EGP:egpAlign(I,2,0)
    
    local I = 9
    EGP:egpLine(I,vec2(TankInfoPanelW-150+W/2,TankInfoPanelH-85+H/2),vec2(TankInfoPanelW+150+W/2,TankInfoPanelH-85+H/2))
    EGP:egpColor(I,vec(0))
    EGP:egpMaterial(I,"particle/smokesprites_0008")
    EGP:egpSize(I,55)
    EGP:egpAlpha(I,0)
    
    local I = 10
    EGP:egpLine(I,vec2(TankInfoPanelW-107+W/2,TankInfoPanelH-85+H/2),vec2(TankInfoPanelW+(-107+(107*((HP/MaxHP)*2)))+W/2,TankInfoPanelH-85+H/2))
    EGP:egpColor(I,vec(0, 255, 0)*0.45)
    EGP:egpMaterial(I,"particle/sparkles")
    EGP:egpSize(I,8)
    EGP:egpAlpha(I,0)
    
    local I = 11
    EGP:egpLine(I,vec2(TankInfoPanelW-55+W/2,TankInfoPanelH-84+H/2),vec2(TankInfoPanelW+55+W/2,TankInfoPanelH-84+H/2))
    EGP:egpColor(I,vec(0))
    EGP:egpMaterial(I,"particle/sparkles")
    EGP:egpSize(I,14)
    EGP:egpAlpha(I,0)
    
    local I = 12
    EGP:egpText(I,HP+"/"+MaxHP,vec2(TankInfoPanelW+W/2,TankInfoPanelH-92+H/2))
    EGP:egpColor(I,vec(156, 156, 156)*0.9)
    EGP:egpFont(I,"Consolas")
    EGP:egpSize(I,14)
    EGP:egpAlign(I,1,0)
    
    TankOffset=-5
    TankScale=vec2(0.95,1)
    
    local I = 13
    EGP:egpRoundedBoxOutline(I,vec2(20,2-TankOffset)*TankScale,vec2(10,72)*TankScale)
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 14
    EGP:egpRoundedBoxOutline(I,vec2(-20,2-TankOffset)*TankScale,vec2(10,72)*TankScale)
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 15
    EGP:egpRoundedBox(I,vec2(0,6-TankOffset)*TankScale,vec2(38,70)*TankScale)
    EGP:egpRadius(I,3)
    EGP:egpColor(I,vec(38, 37, 34)*0.9)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 16
    EGP:egpRoundedBoxOutline(I,vec2(0,6-TankOffset)*TankScale,vec2(38,70)*TankScale)
    EGP:egpRadius(I,3)
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 17
    EGP:egpRoundedBox(I,vec2(17,25-TankOffset)*TankScale,vec2(8,20)*TankScale)
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(38, 37, 34)*0.9)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 18
    EGP:egpRoundedBoxOutline(I,vec2(17,25-TankOffset)*TankScale,vec2(8,20)*TankScale)
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 19
    EGP:egpRoundedBox(I,vec2(-17,25-TankOffset)*TankScale,vec2(8,20)*TankScale)
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(38, 37, 34)*0.9)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 20
    EGP:egpRoundedBoxOutline(I,vec2(-17,25-TankOffset)*TankScale,vec2(8,20)*TankScale)
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    EGP:egpParent(I,3)
    
    local I = 21
    EGP:egpCircle(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH+12+H/2),vec2(15,19))
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(38, 37, 34)*0.9)
    EGP:egpSize(I,1)
    
    local I = 22
    EGP:egpCircleOutline(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH+12+H/2),vec2(15,19))
    EGP:egpRadius(I,2)
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    
    local I = 23
    EGP:egpBox(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH-5+H/2),vec2(8,9))
    EGP:egpColor(I,vec(38, 37, 34)*0.9)
    EGP:egpSize(I,1)
    
    local I = 24
    EGP:egpBoxOutline(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH-5+H/2),vec2(8,9))
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    
    local I = 25
    EGP:egpBox(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH-32+H/2),vec2(4,47))
    EGP:egpColor(I,vec(38, 37, 34)*0.9)
    EGP:egpSize(I,1)
    
    local I = 26
    EGP:egpBoxOutline(I,vec2(TankInfoPanelW+W/2,TankInfoPanelH-33+H/2),vec2(4,48))
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    
    local I = 27
    EGP:egpCircleOutline(I,vec2(TankInfoPanelW-4+W/2,TankInfoPanelH+17+H/2),vec2(4))
    EGP:egpColor(I,vec(255)*0.5)
    EGP:egpSize(I,1)
    
    
    
    local I = 28
    EGP:egpBox(I,vec2(-29+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(45))
    EGP:egpAlpha(I,125)
    EGP:egpSize(I,1)
    
    local I = 29
    EGP:egpBox(I,vec2(-(29*3)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(45))
    EGP:egpAlpha(I,125)
    EGP:egpSize(I,1)
    
    local I = 30
    EGP:egpBox(I,vec2(-(29*5)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(45))
    EGP:egpAlpha(I,125)
    EGP:egpSize(I,1)
    
    local I = 52
    local P = vec2(-(29*1)+W/2,510+H/2)
    EGP:egpLine(I,vec2(-22,20)+P,vec2(22,-20)+P)
    EGP:egpColor(I,vec(255,200,0)*0.9)
    EGP:egpMaterial(I,"particle/smokesprites_0003")
    EGP:egpSize(I,22)
    
    local I = 53
    local P = vec2(-(29*3)+W/2,510+H/2)
    EGP:egpLine(I,vec2(-22,20)+P,vec2(22,-20)+P)
    EGP:egpColor(I,vec(0))
    EGP:egpMaterial(I,"particle/smokesprites_0003")
    EGP:egpSize(I,22)
    
    local I = 54
    local P = vec2(-(29*5)+W/2,510+H/2)
    EGP:egpLine(I,vec2(-22,20)+P,vec2(22,-20)+P)
    EGP:egpColor(I,vec(0))
    EGP:egpMaterial(I,"particle/smokesprites_0003")
    EGP:egpSize(I,22)
    
    local I = 31
    EGP:egpBoxOutline(I,vec2(-29+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,1)
    
    local I = 32
    EGP:egpBoxOutline(I,vec2(-(29*3)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,1)
    
    local I = 33
    EGP:egpBoxOutline(I,vec2(-(29*5)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,1)
    
    
    
    local I = 34
    EGP:egpBox(I,vec2(29+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(45))
    EGP:egpAlpha(I,125)
    EGP:egpSize(I,1)
    
    local I = 35
    EGP:egpBox(I,vec2((29*3)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(45))
    EGP:egpAlpha(I,125)
    EGP:egpSize(I,1)
    
    local I = 36
    EGP:egpBox(I,vec2((29*5)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(45))
    EGP:egpAlpha(I,125)
    EGP:egpSize(I,1)
    
    local I = 37
    EGP:egpBoxOutline(I,vec2(29+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,1)
    
    local I = 38
    EGP:egpBoxOutline(I,vec2((29*3)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,1)
    
    local I = 39
    EGP:egpBoxOutline(I,vec2((29*5)+W/2,512+H/2),vec2(45))
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,1)
    
    
    
    local I = 40
    EGP:egpText(I,"3",vec2(-(29*1)-6+W/2,471+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(5))
    EGP:egpSize(I,20)
    
    local I = 41
    EGP:egpText(I,"2",vec2(-(29*3)-6+W/2,471+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(5))
    EGP:egpSize(I,20)
    
    local I = 42
    EGP:egpText(I,"1",vec2(-(29*5)-6+W/2,471+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(5))
    EGP:egpSize(I,20)
    
    
    local I = 43
    EGP:egpText(I,"4",vec2((29*1)-6+W/2,471+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(5))
    EGP:egpSize(I,20)
    
    local I = 44
    EGP:egpText(I,"5",vec2((29*3)-6+W/2,471+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(5))
    EGP:egpSize(I,20)
    
    local I = 45
    EGP:egpText(I,"6",vec2((29*5)-6+W/2,471+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(5))
    EGP:egpSize(I,20)
    
    
    
    
    local I = 46
    EGP:egpText(I,Gold:toString(),vec2(-(29*1)+0+W/2,515+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(230))
    EGP:egpSize(I,20)
    
    local I = 47
    EGP:egpText(I,HE:toString(),vec2(-(29*3)+0+W/2,515+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(230))
    EGP:egpSize(I,20)
    
    local I = 48
    EGP:egpText(I,AP:toString(),vec2(-(29*5)+0+W/2,515+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(230))
    EGP:egpSize(I,20)
    
    
    local I = 49
    EGP:egpText(I,Slot4:toString(),vec2((29*1)-8+W/2,520+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(75,255,75))
    EGP:egpSize(I,20)
    
    local I = 50
    EGP:egpText(I,Slot5:toString(),vec2((29*3)-8+W/2,520+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(75,255,75))
    EGP:egpSize(I,20)
    
    local I = 51
    EGP:egpText(I,Slot6:toString(),vec2((29*5)-8+W/2,520+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(75,255,75))
    EGP:egpSize(I,20)
    
    local I = 55
    EGP:egpText(I,"APHE",vec2(-(29*1)-18+W/2,498+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,20)
    
    local I = 56
    EGP:egpText(I,"HE",vec2(-(29*3)-9+W/2,498+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,20)
    
    local I = 57
    EGP:egpText(I,"AP",vec2(-(29*5)-9+W/2,498+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(255))
    EGP:egpSize(I,20)
    
    local I = 60
    local P = vec2(0+W/2,0+H/2)
    EGP:egpLine(I,(vec2(15,30)*0.85)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    local I = 61
    EGP:egpLine(I,(vec2(-15,30)*0.85)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    
    local I = 63
    local P = vec2(70+W/2,0+H/2)
    EGP:egpLine(I,(vec2(15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    local I = 64
    EGP:egpLine(I,(vec2(-15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    
    local I = 65
    local P = vec2(-70+W/2,0+H/2)
    EGP:egpLine(I,(vec2(15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    local I = 66
    EGP:egpLine(I,(vec2(-15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    
    local I = 67
    local P = vec2((70*2)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    local I = 68
    EGP:egpLine(I,(vec2(-15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    
    local I = 69
    local P = vec2(-(70*2)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    local I = 70
    EGP:egpLine(I,(vec2(-15,30)*0.7)+P,vec2(0,0)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    
    local I = 71
    local P = vec2((70*1)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(-70*0.7,17)*0.7)+P,(vec2(-70*0.7,0)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    local I = 72
    local P = vec2(-(70*1)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(70*0.7,17)*0.7)+P,(vec2(70*0.7,0)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    local I = 73
    local P = vec2((70*2)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(-70*0.7,17)*0.7)+P,(vec2(-70*0.7,0)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    local I = 74
    local P = vec2(-(70*2)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(70*0.7,17)*0.7)+P,(vec2(70*0.7,0)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    local I = 75
    local P = vec2((70*3)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(-70*0.7,17)*0.7)+P,(vec2(-70*0.7,0)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    local I = 76
    local P = vec2(-(70*3)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(70*0.7,17)*0.7)+P,(vec2(70*0.7,0)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,2)
    
    local I = 77
    local P = vec2((70*3)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(-70*0.7,-0.5)*0.7)+P,(vec2(15,-0.5)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    local I = 78
    local P = vec2(-(70*3)+W/2,0+H/2)
    EGP:egpLine(I,(vec2(70*0.7,-0.5)*0.7)+P,(vec2(-15,-0.5)*0.7)+P)
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,1)
    
    local I = 79
    Dist=round(convertUnit("u","m",Gun:pos():distance(holoEntity(1):pos())))
    EGP:egpText(I,Dist+" m",vec2(0+W/2,-150+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,22)
    EGP:egpAlign(I,1,1)
    
    
    local I = 80
    EGP:egpText(I,"0 km/h",vec2(0+W/2,150+H/2))
    EGP:egpFont(I,"Consolas")
    EGP:egpColor(I,vec(25))
    EGP:egpSize(I,22)
    EGP:egpAlign(I,1,1)
    
    Count=45
    Count2=15
    timer("create shit",50)
}
if(clk("create shit")){
    if(I3<Count){
        I3++
        local I2 = I3+80
        local P = vec2(-0+W/2,0+H/2)
        local PosTest=vec2(265*1.1,0):rotate(-45+((90/Count)*I3))
        local PosTest2=vec2(255*1.1,0):rotate(-45+((90/Count)*I3))
        EGP:egpLine(I2,PosTest+P,PosTest2+P)
        EGP:egpColor(I2,vec(25))
        EGP:egpSize(I2,2)
        
        local I2 = I3+80+Count
        local P = vec2(0+W/2,0+H/2)
        local PosTest=vec2(265*1.1,0):rotate(-45+180+((90/Count)*I3))
        local PosTest2=vec2(255*1.1,0):rotate(-45+180+((90/Count)*I3))
        EGP:egpLine(I2,PosTest+P,PosTest2+P)
        EGP:egpColor(I2,vec(25))
        EGP:egpSize(I2,2)
        timer("create shit",50)
    }else{
        I3=0
        timer("create shit 2",50)
    }
}

if(clk("create shit 2")){
    if(I3<Count2){
        I3++
        local I2 = I3+80+Count*2
        
        local PosTest=vec2(265,0):rotate(90+((360/Count2)*I3))
        local PosTest2=vec2(245,0):rotate(90+((360/Count2)*I3))
        EGP:egpLine(I2,PosTest,PosTest2)
        EGP:egpColor(I2,vec(255))
        EGP:egpSize(I2,2)
        EGP:egpParent(I2,1)
        timer("create shit 2",50)
    }else{
        Ready=1
    }
}
if(Ready){
    for(I=1,Count2){
        local I2 = I+80+Count*2
        Spread1 = (Turret:isValid() ? 265*0.22 : 180*Turret:acfSpread())/2
        Spread2 = (Turret:isValid() ? 245*0.21 : 180*Turret:acfSpread())/2
        
        Dist2=Gun:pos():distance(holoEntity(1):pos())
        
        PosTest3=vec2((Spread1/(1+Dist2*0.0001))*(1+Zoom)*0.55,0):rotate(90+((360/Count2)*I))
        PosTest4=vec2((Spread2/(1+Dist2*0.0001))*(1+Zoom)*0.55,0):rotate(90+((360/Count2)*I))
        EGP:egpLine(I2,PosTest3,PosTest4)
    }
    
    Progress=round(Gun:acfReloadProgress()*100)
    
    Progress2=Progress/100
    if(Progress<100){
        for(I=1,Count){
            local I2 = I+80+Count
            if(I<=(Count*(Progress2))){
                EGP:egpColor(I2,vec(0,100,0))
            }else{
                EGP:egpColor(I2,vec(25))
            }
            local I2 = I+80
            if(GunReady){
                EGP:egpColor(I2,vec(0,100,0))
            }else{
                EGP:egpColor(I2,vec(25))
            }
        }
    }
    if((changed(Progress)&(Progress==1))|(changed(GunReady)&GunReady)){
        for(I=1+80,Count+80+Count){
            EGP:egpColor(I,vec(0,100,0))
        }
    }
}
if(changed(Seat:driver())&Seat:driver()){
    local I = 7
    EGP:egpSetText(7,Seat:driver():name())
}
if(changed(HP)){
    EGP:egpSetText(12,HP+"/"+MaxHP)
    local I = 10
    EGP:egpLine(I,vec2(TankInfoPanelW-107+W/2,TankInfoPanelH-85+H/2),vec2(TankInfoPanelW+(-107+(107*((HP/MaxHP)*2)))+W/2,TankInfoPanelH-85+H/2))
    EGP:egpColor(I,vec(255*(1-(HP/MaxHP)), 255*(HP/MaxHP), 0)*0.45)
}

if(changed(AP)|first()){
    EGP:egpSetText(48,AP:toString())
    if(AP==0){
        EGP:egpColor(33,vec(175,0,0))
        EGP:egpColor(57,vec(80))
    }
    if(AP>0){
        EGP:egpColor(33,vec(0,125,0))
        EGP:egpColor(57,vec(255))
    }
}

if(changed(HE)|first()){
    EGP:egpSetText(47,HE:toString())
    if(HE==0){
        EGP:egpColor(32,vec(175,0,0))
        EGP:egpColor(56,vec(80))
    }
    if(HE>0){
        EGP:egpColor(32,vec(0,125,0))
        EGP:egpColor(56,vec(255))
    }
}

if(changed(Gold)|first()){
    EGP:egpSetText(46,Gold:toString())
    if(Gold==0){
        EGP:egpColor(31,vec(175,0,0))
        EGP:egpColor(55,vec(80))
    }
    if(Gold>0){
        EGP:egpColor(31,vec(0,125,0))
        EGP:egpColor(55,vec(255))
    }
}

if(changed(Slot6)|first()){
    if(Slot6==0){
        EGP:egpColor(39,vec(175,0,0))
        EGP:egpAlpha(51,0)
    }
    if(Slot6>0){
        EGP:egpColor(39,vec(0,125,0))
        EGP:egpAlpha(51,255)
    }
}

if(changed(Slot5)|first()){
    if(Slot5==0){
        EGP:egpColor(38,vec(175,0,0))
        EGP:egpAlpha(50,0)
    }
    if(Slot5>0){
        EGP:egpColor(38,vec(0,125,0))
        EGP:egpAlpha(50,255)
    }
}

if(changed(Slot4)|first()){
    if(Slot4==0){
        EGP:egpColor(37,vec(175,0,0))
        EGP:egpAlpha(49,0)
    }
    if(Slot4>0){
        EGP:egpColor(37,vec(0,125,0))
        EGP:egpAlpha(49,255)
    }
}

interval(100)
if(changed(Active)&Active){
    ZoomX=" "
    Zoom=0
}
Dist=round(convertUnit("u","m",Gun:pos():distance(holoEntity(1):pos())))
EGP:egpSetText(79,Dist+" m")

EGP:egpSetText(80,round(KMH)+" km/h")

if(Active){
    if(changed(FOV)){
        if(FOV==0){
            ZoomX=" "
            Zoom=0
        }elseif(FOV==1){
            ZoomX="x2"
            Zoom=2
        }elseif(FOV==2){
            ZoomX="x4"
            Zoom=4
        }elseif(FOV==3){
            ZoomX="x8"
            Zoom=8
        }elseif(FOV==4){
            ZoomX="x16"
            Zoom=16
        }else{
            ZoomX=""
            Zoom=0
        }
        local I = 1000
        EGP:egpText(I,ZoomX,vec2(109+W/2,22+H/2))
        EGP:egpFont(I,"Consolas")
        EGP:egpColor(I,vec(240))
        EGP:egpSize(I,19)
    }
    
    Gun_Ranger = rangerOffset( 100000 , Gun:toWorld(vec(150,0,0)) , Gun:forward() )
    holoPos(1,Gun_Ranger:position())
    
    Yaw = Gun:toLocal(Base:angles()):yaw()
    EGP:egpAngle(3,Yaw)
}

