@name GDoom/SpawnPlayer
@persist [A C] [T Return]:table

#-- Thanks to Shadowscion for this bit of code!

if(first()){timer("spawn",15)}
function table spawn_holograms(){
    timer("spawn",15)
    while(perf()&C<A&holoCanCreate()){
        C++
        local D = T[C,table]
        local I = D[1,number]
        local E = holoEntity(D[2,number]) ?: entity()
        holoCreate(I)
        holoPos(I,E:toWorld(D[3,vector]))
        holoAng(I,E:toWorld(D[4,angle]))
        holoParent(I,E)
        
        holoScale(I,D[5,vector])
        holoModel(I,D[6,string])
        holoMaterial(I,D[7,string])
        holoColor(I,D[8,table][1,vector])
        holoAlpha(I,D[8,table][2,number])
        Return:pushEntity(holoEntity(I))
    }
    if(C>=A){
        stoptimer("spawn")
        #printColor(vec(225,255,225),"\nFinished spawning " + C + " holograms.")
        printColor(vec(225,255,225),"Doomguy Finished Spawning!")
    }
    Return:pushNumber(C >= A)
    return Return
}

A++,T[A,table] = table(1,0,vec(0,0,74/2),ang(0,0,0),vec(30,30,74)/12,"models/sprops/cuboids/height12/size_1/cube_12x12x12.mdl","models/debug/debugwhite",table(vec(200),75))
A++,T[A,table] = table(2,1,vec(0,0,25),ang(0,0,0),vec(12)/12,"models/sprops/cuboids/height12/size_1/cube_12x12x12.mdl","models/debug/debugwhite",table(vec(150,0,0),125))
A++,T[A,table] = table(3,2,vec(10,0,-15),ang(0,0,0),vec(10)/12,"models/sprops/cuboids/height12/size_1/cube_12x12x12.mdl","models/debug/debugwhite",table(vec(150,125,0),125))
